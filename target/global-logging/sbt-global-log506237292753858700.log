[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: $/setTraceNotification: JsonRpcNotificationMessage(2.0, $/setTraceNotification, {"value":"off"})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///home/fizza/BlackBocx-/src/main/scala/practice/Alu.scala","languageId":"scala","version":1,"text":""}})[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(;Test/compile; collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":4,"message":"Processing"})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///home/fizza/BlackBocx-/src/test/scala/practice/AluTests.scala","languageId":"scala","version":1,"text":""}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///home/fizza/BlackBocx-/src/test/scala/practice/AdderTests.scala","languageId":"scala","version":1,"text":"package practice\n\nimport chisel3._\nimport chisel3 . util._\nimport org.scalatest._\nimport chisel3.experimental._\nimport chiseltest._\nimport chisel3.experimental.BundleLiterals._\nimport chiseltest.experimental.TestOptionBuilder._\nimport chiseltest.internal.VerilatorBackendAnnotation\n// import org.scalatest.flatspec.AnyFlatSpec\n\n\n\nclass AdderTests extends FreeSpec with ChiselScalatestTester {\n\n  \"Adder is beautiful\" in {\n    test(new Adder()).withAnnotations(Seq(VerilatorBackendAnnotation)) { c =>\n        c.io.a.poke(4.U)\n        c.io.b.poke(3.U)\n        \n        // c.io.i_clk.poke(Clock().asInstanceOf[Bool])\n        \n        // c.io.clk.poke(clock.asUInt()(0).asClock())\n        // c.io.rst_n.poke(0.B)\n        // c.io.data_in.poke(8.U)\n        // c.io.start.poke(1.B)\n\n\n        c.clock.step(20)\n    }\n  }\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: $/cancelRequest: JsonRpcNotificationMessage(2.0, $/cancelRequest, {"id":4})[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(Test/compile, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, shutdown, [true,null])[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / compile[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, shutdown, [false,null])[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, shutdown, [true,null])[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, shutdown, [true,null])[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, shutdown, [true,null])[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition json request: {"textDocument":{"uri":"file:///home/fizza/BlackBocx-/src/test/scala/practice/AdderTests.scala"},"position":{"line":16,"character":13}}[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition found line:   "Adder is beautiful" in {[0m
[0m[[0m[0minfo[0m] [0m[0mshutting down sbt server[0m
