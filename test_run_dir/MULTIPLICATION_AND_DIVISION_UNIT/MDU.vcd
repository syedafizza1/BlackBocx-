$version Generated by VerilatedVcd $end
$date Mon Nov  1 10:51:19 2021
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 m! clock $end
  $var wire  3 /" io_i_mdu_op [2:0] $end
  $var wire 32 }! io_i_mdu_rs1 [31:0] $end
  $var wire 32 '" io_i_mdu_rs2 [31:0] $end
  $var wire  1 7" io_i_mdu_valid $end
  $var wire 32 G" io_o_mdu_rd [31:0] $end
  $var wire  1 ?" io_o_mdu_ready $end
  $var wire  1 u! reset $end
  $scope module MDU $end
   $var wire  1 # a_i_clk $end
   $var wire  3 /" a_i_mdu_op [2:0] $end
   $var wire 32 }! a_i_mdu_rs1 [31:0] $end
   $var wire 32 '" a_i_mdu_rs2 [31:0] $end
   $var wire  1 7" a_i_mdu_valid $end
   $var wire  1 m! a_i_rst $end
   $var wire 32 W" a_o_mdu_rd [31:0] $end
   $var wire  1 O" a_o_mdu_ready $end
   $var wire  1 m! clock $end
   $var wire  3 /" io_i_mdu_op [2:0] $end
   $var wire 32 }! io_i_mdu_rs1 [31:0] $end
   $var wire 32 '" io_i_mdu_rs2 [31:0] $end
   $var wire  1 7" io_i_mdu_valid $end
   $var wire 32 G" io_o_mdu_rd [31:0] $end
   $var wire  1 ?" io_o_mdu_ready $end
   $var wire  1 u! reset $end
   $scope module a $end
    $var wire 32 1# WIDTH [31:0] $end
    $var wire 32 E! div_rd [31:0] $end
    $var wire  1 ]! div_ready $end
    $var wire 32 -! dividend [31:0] $end
    $var wire 63 M! divisor [62:0] $end
    $var wire  1 # i_clk $end
    $var wire  3 /" i_mdu_op [2:0] $end
    $var wire 32 }! i_mdu_rs1 [31:0] $end
    $var wire 32 '" i_mdu_rs2 [31:0] $end
    $var wire  1 7" i_mdu_valid $end
    $var wire  1 m! i_rst $end
    $var wire  1 + is_div $end
    $var wire  1 o" is_mul $end
    $var wire  1 )# is_mulh $end
    $var wire  1 3 is_rem $end
    $var wire  1 { mul_done $end
    $var wire  1 s mul_en $end
    $var wire 32 _" mul_rd [31:0] $end
    $var wire  1 g" mul_ready $end
    $var wire 32 W" o_mdu_rd [31:0] $end
    $var wire  1 O" o_mdu_ready $end
    $var wire  1 %! outsign $end
    $var wire  1 ; prep $end
    $var wire 32 5! quotient [31:0] $end
    $var wire 32 =! quotient_msk [31:0] $end
    $var wire 64 c rd [63:0] $end
    $var wire 33 C rdata_a [32:0] $end
    $var wire 33 S rdata_b [32:0] $end
    $var wire  1 e! running $end
    $var wire  1 !# sign_unsign_mul $end
    $var wire  1 !# unsign_div_rem $end
    $var wire  1 w" unsign_mul $end
    $var wire  1 7" valid $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
0+
03
0;
b000000000000000000000000000000000 C
b000000000000000000000000000000000 S
b0000000000000000000000000000000000000000000000000000000000000000 c
0s
0{
0%!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 E!
b000000000000000000000000000000000000000000000000000000000000000 M!
0]!
0e!
0m!
1u!
b00000000000000000000000000000000 }!
b00000000000000000000000000000000 '"
b000 /"
07"
0?"
b00000000000000000000000000000000 G"
0O"
b00000000000000000000000000000000 W"
b00000000000000000000000000000000 _"
0g"
1o"
0w"
0!#
0)#
b00000000000000000000000000100000 1#
#1
0#
1m!
#2
1#
0m!
0u!
b00000000000000000000000000000001 }!
b00000000000000000000000000000101 '"
b010 /"
17"
1w"
1)#
#3
0#
1m!
#4
1#
b000000000000000000000000000000001 C
b000000000000000000000000000000101 S
1s
0m!
#5
0#
1m!
#6
1#
b0000000000000000000000000000000000000000000000000000000000000101 c
1{
0m!
1?"
1O"
1g"
#7
0#
1m!
#8
1#
0m!
#9
0#
1m!
#10
1#
0m!
#11
0#
1m!
#12
1#
0m!
#13
0#
1m!
#14
1#
0m!
#15
0#
1m!
#16
1#
0m!
#17
0#
1m!
#18
1#
0m!
#19
0#
1m!
#20
1#
0m!
#21
0#
1m!
#22
1#
0m!
#23
0#
1m!
#24
1#
0m!
#25
0#
1m!
#26
1#
0m!
#27
0#
1m!
#28
1#
0m!
#29
0#
1m!
#30
1#
0m!
#31
0#
1m!
#32
1#
0m!
#33
0#
1m!
#34
1#
0m!
#35
0#
1m!
#36
1#
0m!
#37
0#
1m!
#38
1#
0m!
#39
0#
1m!
#40
1#
0m!
#41
0#
1m!
#42
1#
0s
0m!
b00000000000000000000000000000000 }!
b00000000000000000000000000000000 '"
b000 /"
07"
0?"
b00000000000000000000000000000101 G"
0O"
b00000000000000000000000000000101 W"
b00000000000000000000000000000101 _"
0g"
0w"
0)#
#43
0#
1m!
